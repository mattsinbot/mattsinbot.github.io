---
title: "PID controller step input characteristics"
date: 2019-12-07
tags: [PID control]
header:
mathjax: "true"
---

In this post I will show some theoretical analysis of the PID controller that we have designed in my previous post. After going through this post one will be able to under stand how to derived transfer function of a PID controller, what are the different characteristics of step input response and how are they defined. Finally we will use the data that we have collected in previous postduring the experiment to simulate a PID controller and analyze its step response.

# Transfer function of a PID controller
A PID controller block, takes the error signal as input and generates control output signal. In time domain if we define control input as $$u(t)$$ and error signal as $$e(t)$$, then based on the definition of PID controller, we write

$$u(t) = K_Pe(t) + K_I\int e(t) + K_D \dot{e(t)}$$

Taking the Laplace transform we get,

$$U(s) = (K_P + K_I/s + K_Ds)E(s)$$

Therefore transfer function of the PID block is obtained as,

$$T(s) = \frac{U(s)}{E(s)} = K_P + \frac{K_I}{s} + K_Ds$$

In some applications, it is beneficial to express $$K_I = K_P/T_i$$ and $$K_D = K_PT_d$$, where $$T_i$$ and $$T_d$$ are integration and derivative time horizons. This is exactly what we did in [PID experiment post](https://mattsinbot.github.io/PID/) to derive the transfer function.

# Characteristic of Step Response
There are three main characteristics of the step response. They are,
1. Rise time
2. Settling time
3. Percentage of Overshoot

### Rise time (): 
The time that the response signal would take to reach to 90% from 10% of the steady-state response.

### Settling time:
The time that the response signal would take to settle within 2% error relative to the steady-state response.

### Percentage of Overshoot:
Percentage difference between the maximum peak of the response and steady state response, relative to the steady state response.

[here](https://www.mathworks.com/help/control/ref/stepinfo.html)

After running the above script in python, we can visualize the data as in the figure below.
![alt]({{ site.url }}{{ site.baseurl }}/images/control/visualize_recorded_data2.png)
